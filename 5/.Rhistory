summary.lm <- summary(lm(PRP ~ ., data=computerData))
vars <- names(computerData)
vars <- vars[which(vars != "PRP")]
tol <- 0.01
coef <- summary.lm$coefficients
View(coef)
View(coef)
var_with_max_p.value <- rownames(coef)[apply(coef,2,which.max)][4]
vars <- vars[-var_with_max_p.value]
vars <- vars[-c(var_with_max_p.value)]
vars <- vars[which(vars != var_with_max_p.value)]
vars <- names(computerData)
vars <- vars[which(vars != "PRP")]
vars <- vars[!which(var_with_max_p.value)]
computerData <- read.table('ComputerData.txt', header = T)
computerData <- computerData[c("MYCT","MMIN","MMAX","CACH","CGMIN","CHMAX","PRP")]
summary.lm <- summary(lm(PRP ~ ., data=computerData))
vars <- names(computerData)
vars <- vars[which(vars != "PRP")]
tol <- 0.01
while(length(which(summary.lm$coefficients[,4] > tol)) != 0){
coef <- summary.lm$coefficients
var_with_max_p.value <- rownames(coef)[apply(coef,2,which.max)][4]
vars <- vars[which(vars != var_with_max_p.value)]
lm2 <- lm(computerData$PRP~., data = computerData[vars])
summary.lm <- summary(lm2)
}
#start with all the descriptors of computer performance in the lm
summary.lm <- summary(lm(PRP ~ ., data=computerData))
vars <- names(computerData)
vars <- vars[which(vars != "PRP")]
tol <- 0.01
#while there are still variables with p-values larger than tol
while(length(which(summary.lm$coefficients[,4] > tol)) != 0){
#coefficients table
coef <- summary.lm$coefficients
#find the variable with the largest p-value
var_with_max_p.value <- rownames(coef)[apply(coef,2,which.max)][4]
#remove the variable with the larger value
vars <- vars[which(vars != var_with_max_p.value)]
#computer the model with the updated variables
lm2 <- lm(computerData$PRP~., data = computerData[vars])
summary.lm <- summary(lm2)
}
summary.lm
#start with all the descriptors of computer performance in the lm
summary.lm <- summary(lm(PRP ~ ., data=computerData))
vars <- names(computerData)
vars <- vars[which(vars != "PRP")]
tol <- 0.01
#while there are still variables with p-values larger than tol
while(length(which(summary.lm$coefficients[,4] > tol)) != 0){
#coefficients table
coef <- summary.lm$coefficients
#find the variable with the largest p-value
var_with_max_p.value <- rownames(coef)[apply(coef,2,which.max)][4]
#remove the variable with the larger value
vars <- vars[which(vars != var_with_max_p.value)]
#computer the model with the updated variables
lm2 <- lm(computerData$PRP~vars, data = computerData[vars])
summary.lm <- summary(lm2)
}
#start with all the descriptors of computer performance in the lm
summary.lm <- summary(lm(PRP ~ ., data=computerData))
vars <- names(computerData)
vars <- vars[which(vars != "PRP")]
tol <- 0.01
#while there are still variables with p-values larger than tol
while(length(which(summary.lm$coefficients[,4] > tol)) != 0){
#coefficients table
coef <- summary.lm$coefficients
#find the variable with the largest p-value
var_with_max_p.value <- rownames(coef)[apply(coef,2,which.max)][4]
#remove the variable with the larger value
vars <- vars[which(vars != var_with_max_p.value)]
#computer the model with the updated variables
lm2 <- lm(computerData$PRP~., data = computerData[vars])
summary.lm <- summary(lm2)
}
summary.lm
#start with all the descriptors of computer performance in the lm
summary.lm <- summary(lm(PRP ~ ., data=computerData))
vars <- names(computerData)
vars <- vars[which(vars != "PRP")]
tol <- 0.01
#while there are still variables with p-values larger than tol
while(length(which(summary.lm$coefficients[,4] > tol)) != 0){
#coefficients table
coef <- summary.lm$coefficients
#find the variable with the largest p-value
var_with_max_p.value <- rownames(coef)[apply(coef,2,which.max)][4]
#remove the variable with the larger value
vars <- vars[which(vars != var_with_max_p.value)]
#computer the model with the updated variables
lm2 <- lm(computerData$PRP~., data = computerData[vars])
summary.lm <- summary(lm2)
}
summary.lm
#start with all the descriptors of computer performance in the lm
summary.lm <- summary(lm(PRP ~ ., data=computerData))
vars <- names(computerData)
vars <- vars[which(vars != "PRP")]
tol <- 0.01
#while there are still variables with p-values larger than tol
while(length(which(summary.lm$coefficients[,4] > tol)) != 0){
#coefficients table
coef <- summary.lm$coefficients
#find the variable with the largest p-value
var_with_max_p.value <- rownames(coef)[apply(coef,2,which.max)][4]
#remove the variable with the larger value
vars <- vars[which(vars != var_with_max_p.value)]
#computer the model with the updated variables
lm2 <- lm(PRP~., data = computerData[vars])
summary.lm <- summary(lm2)
}
#start with all the descriptors of computer performance in the lm
summary.lm <- summary(lm(PRP ~ ., data=computerData))
vars <- names(computerData)
vars <- vars[which(vars != "PRP")]
tol <- 0.01
#while there are still variables with p-values larger than tol
while(length(which(summary.lm$coefficients[,4] > tol)) != 0){
#coefficients table
coef <- summary.lm$coefficients
#find the variable with the largest p-value
var_with_max_p.value <- rownames(coef)[apply(coef,2,which.max)][4]
#remove the variable with the larger value
vars <- vars[which(vars != var_with_max_p.value)]
#computer the model with the updated variables
lm2 <- lm(computerData$PRP~., data = computerData[vars])
summary.lm <- summary(lm2)
}
summary.lm
summary(lm(PRP~., data=computerData))
null_cars.lm <- lm(mpg ~ 1, data=cars)
cars <- read.table('Cars2Data.txt', header = T)
cars <- cars[-9]
cars <- na.omit(cars)
cars$origin <- as.factor(cars$origin)
summary(cars)
null_cars.lm <- lm(mpg ~ 1, data=cars)
full_cars.lm <- lm(mpg ~ ., data=cars)
fwd_search <- step(null_cars.lm, scope=list(lower=null_cars.lm, upper=full_cars.lm), direction="forward", trace = FALSE)
bckwd_search <- step(full_cars.lm, data=cars, direction="backward", trace = F)
summary(fwd_search)
summary(bckwd_search)
anova(bckwd_search)
lm(formula = mpg ~ cylinders + displacement + horsepower + weight +
year + origin + acceleration, data = cars)
summary(lm(formula = mpg ~ cylinders + displacement + horsepower + weight +
year + origin + acceleration, data = cars))
null_computer.lm <- lm(PRP ~ 1, data=computerData)
full_computer.lm <- lm(PRP ~ ., data=computerData)
fwd_search <- step(null_computer.lm, scope=list(lower=null_computer.lm,
upper=full_computer.lm),direction="forward", trace=F)
bckwd_search <- step(full_computer.lm, data=computerData, direction="backward", trace = F)
#summary(fwd_search)
summary(bckwd_search)
#anova(bckwd_search)
cars.lm <- lm(mpg ~ cylinders + displacement + horsepower + weight +  year + origin, data = cars)
plot(cars.lm)
cars.lm <- lm(mpg ~ cylinders + displacement + horsepower + weight +  year + origin, data = cars)
plot(cars.lm)
cars.lm <- lm(mpg ~ cylinders + displacement + horsepower + weight +  year + origin, data = cars)
plot(cars.lm)
cars.lm <- lm(mpg ~ cylinders + displacement + horsepower + weight +  year + origin, data = cars)
plot(cars.lm)
cars.lm <- lm(mpg ~ cylinders + displacement + horsepower + weight +  year + origin, data = cars)
plot(cars.lm)
cars.lm <- lm(mpg ~ cylinders + displacement + horsepower + weight +  year + origin, data = cars)
plot(cars.lm)
cars.lm <- lm(mpg ~ cylinders + displacement + horsepower + weight +  year + origin, data = cars)
plot(cars.lm)
cars.lm <- lm(mpg ~ cylinders + displacement + horsepower + weight +  year + origin, data = cars)
plot(cars.lm)
cars.lm <- lm(mpg ~ cylinders + displacement + horsepower + weight +  year + origin, data = cars)
plot(cars.lm)
cars.lm <- lm(mpg ~ cylinders + displacement + horsepower + weight +  year + origin, data = cars)
plot(cars.lm)
cars.lm <- lm(mpg ~ cylinders + displacement + horsepower + weight +  year + origin, data = cars)
plot(cars.lm)
cars.lm <- lm(mpg ~ cylinders + displacement + horsepower + weight +  year + origin, data = cars)
plot(cars.lm)
cars.lm <- lm(mpg ~ cylinders + displacement + horsepower + weight +  year + origin, data = cars)
plot(cars.lm)
plot(cars.lm)
computer.lm.model <- lm(formula = PRP ~ MYCT + MMIN + MMAX + CACH + CHMAX, data = computerData)
plot(computer.lm.model)
computer.lm.model <- lm(formula = PRP ~ MYCT + MMIN + MMAX + CACH + CHMAX, data = computerData)
plot(computer.lm.model)
computer.lm.model <- lm(formula = PRP ~ MYCT + MMIN + MMAX + CACH + CHMAX, data = computerData)
plot(computer.lm.model)
edu_data = read.table("Education5.txt", header=T)
clean_edu_data = edu_data[c('Education','Gender','Wage' )]
summary(clean_edu_data)
mod <- lm(Wage ~ ., data=clean_edu_data)
summary(mod)
l <- anova(mod)
TSS <- sum(l$`Sum Sq`[1:2])
RSS <- l$`Sum Sq`[3]
p <- 2
n <- nrow(clean_edu_data)
F_c <- ((TSS-RSS)/p)/(RSS/(n-p-1))
mod_1 <- lm(Wage ~ Education, data=clean_edu_data)
mod_2 <- lm(Wage ~ Gender, data=clean_edu_data)
mod_3 <- lm(Wage ~ ., data=clean_edu_data)
RSE_1 <- summary(mod_1)$sigma
RSE_2 <- summary(mod_2)$sigma
RSE_3 <- summary(mod_3)$sigma
R_sq_1 <- summary(mod_1)$r.squared
R_sq_2 <- summary(mod_2)$r.squared
R_sq_3 <- summary(mod_3)$r.squared
computerData <- read.table('ComputerData.txt', header = T)
computerData <- computerData[c("MYCT","MMIN","MMAX","CACH","CGMIN","CHMAX","PRP")]
#start with all the descriptors of computer performance in the lm
summary.lm <- summary(lm(PRP ~ ., data=computerData))
vars <- names(computerData)
vars <- vars[which(vars != "PRP")]
tol <- 0.01
#while there are still variables with p-values larger than tol
while(length(which(summary.lm$coefficients[,4] > tol)) != 0){
#coefficients table
coef <- summary.lm$coefficients
#find the variable with the largest p-value
var_with_max_p.value <- rownames(coef)[apply(coef,2,which.max)][4]
#remove the variable with the larger value
vars <- vars[which(vars != var_with_max_p.value)]
#computer the model with the updated variables
lm2 <- lm(computerData$PRP~., data = computerData[vars])
summary.lm <- summary(lm2)
}
summary.lm
null_computer.lm <- lm(PRP ~ 1, data=computerData)
full_computer.lm <- lm(PRP ~ ., data=computerData)
fwd_search <- step(null_computer.lm, scope=list(lower=null_computer.lm,
upper=full_computer.lm),direction="forward", trace=F)
bckwd_search <- step(full_computer.lm, data=computerData, direction="backward", trace = F)
#summary(fwd_search)
summary(bckwd_search)
#anova(bckwd_search)
computer.lm.model <- lm(formula = PRP ~ MYCT + MMIN + MMAX + CACH + CHMAX, data = computerData)
plot(computer.lm.model)
null_cars.lm <- lm(mpg ~ 1, data=cars)
full_cars.lm <- lm(mpg ~ ., data=cars)
fwd_search <- step(null_cars.lm, scope=list(lower=null_cars.lm, upper=full_cars.lm),
direction="forward", trace = F)
bckwd_search <- step(full_cars.lm, data=cars, direction="backward", trace = F)
mixed_search <- step(null_cars.lm, scope = list(lower=null_cars.lm, upper=full_cars.lm),
data=cars, direction="both")
summary(mixed_search)
#summary(bckwd_search)
null_cars.lm <- lm(mpg ~ 1, data=cars)
full_cars.lm <- lm(mpg ~ ., data=cars)
fwd_search <- step(null_cars.lm, scope=list(lower=null_cars.lm, upper=full_cars.lm),
direction="forward", trace = F)
bckwd_search <- step(full_cars.lm, data=cars, direction="backward", trace = F)
mixed_search <- step(null_cars.lm, scope = list(upper=full_cars.lm),
data=cars, direction="both")
summary(mixed_search)
#summary(bckwd_search)
null_cars.lm <- lm(mpg ~ 1, data=cars)
full_cars.lm <- lm(mpg ~ ., data=cars)
fwd_search <- step(null_cars.lm, scope=list(lower=null_cars.lm, upper=full_cars.lm),
direction="forward", trace = F)
bckwd_search <- step(full_cars.lm, data=cars, direction="backward", trace = F)
mixed_search <- step(null_cars.lm, scope = list(upper=full_cars.lm),
data=cars, direction="both", trace = F)
summary(mixed_search)
#summary(bckwd_search)
View(cars)
View(cars)
null_cars.lm <- lm(mpg ~ 1, data=cars)
full_cars.lm <- lm(mpg ~ ., data=cars)
fwd_search <- step(null_cars.lm, scope=list(lower=null_cars.lm, upper=full_cars.lm),
direction="forward", trace = F)
bckwd_search <- step(full_cars.lm, data=cars, direction="backward", trace = F)
mixed_search <- step(null_cars.lm, scope = list(upper=full_cars.lm),
data=cars, direction="both", trace = F)
#summary(mixed_search)
#start with all the descriptors of computer performance in the lm
summary.lm <- summary(lm(PRP ~ ., data=cars))
null_cars.lm <- lm(mpg ~ 1, data=cars)
full_cars.lm <- lm(mpg ~ ., data=cars)
fwd_search <- step(null_cars.lm, scope=list(lower=null_cars.lm, upper=full_cars.lm),
direction="forward", trace = F)
bckwd_search <- step(full_cars.lm, data=cars, direction="backward", trace = F)
mixed_search <- step(null_cars.lm, scope = list(upper=full_cars.lm),
data=cars, direction="both", trace = F)
#summary(mixed_search)
#start with all the descriptors of computer performance in the lm
summary.lm <- summary(lm(mpg ~ ., data=cars))
vars <- names(cars)
vars <- vars[which(vars != "mpg")]
tol <- 0.01
#while there are still variables with p-values larger than tol
while(length(which(summary.lm$coefficients[,4] > tol)) != 0){
#coefficients table
coef <- summary.lm$coefficients
#find the variable with the largest p-value
var_with_max_p.value <- rownames(coef)[apply(coef,2,which.max)][4]
#remove the variable with the larger value
vars <- vars[which(vars != var_with_max_p.value)]
#computer the model with the updated variables
lm2 <- lm(computerData$PRP~., data = computerData[vars])
summary.lm <- summary(lm2)
}
null_cars.lm <- lm(mpg ~ 1, data=cars)
full_cars.lm <- lm(mpg ~ ., data=cars)
fwd_search <- step(null_cars.lm, scope=list(lower=null_cars.lm, upper=full_cars.lm),
direction="forward", trace = F)
bckwd_search <- step(full_cars.lm, data=cars, direction="backward", trace = F)
mixed_search <- step(null_cars.lm, scope = list(upper=full_cars.lm),
data=cars, direction="both", trace = F)
#summary(mixed_search)
#start with all the descriptors of computer performance in the lm
summary.lm <- summary(lm(mpg ~ ., data=cars))
vars <- names(cars)
vars <- vars[which(vars != "mpg")]
tol <- 0.01
#while there are still variables with p-values larger than tol
while(length(which(summary.lm$coefficients[,4] > tol)) != 0){
#coefficients table
coef <- summary.lm$coefficients
#find the variable with the largest p-value
var_with_max_p.value <- rownames(coef)[apply(coef,2,which.max)][4]
#remove the variable with the larger value
vars <- vars[which(vars != var_with_max_p.value)]
#computer the model with the updated variables
lm2 <- lm(cars$PRP~., data = cars[vars])
summary.lm <- summary(lm2)
}
null_cars.lm <- lm(mpg ~ 1, data=cars)
full_cars.lm <- lm(mpg ~ ., data=cars)
fwd_search <- step(null_cars.lm, scope=list(lower=null_cars.lm, upper=full_cars.lm),
direction="forward", trace = F)
bckwd_search <- step(full_cars.lm, data=cars, direction="backward", trace = F)
mixed_search <- step(null_cars.lm, scope = list(upper=full_cars.lm),
data=cars, direction="both", trace = F)
#summary(mixed_search)
#start with all the descriptors of computer performance in the lm
summary.lm <- summary(lm(mpg ~ ., data=cars))
vars <- names(cars)
vars <- vars[which(vars != "mpg")]
tol <- 0.01
#while there are still variables with p-values larger than tol
while(length(which(summary.lm$coefficients[,4] > tol)) != 0){
#coefficients table
coef <- summary.lm$coefficients
#find the variable with the largest p-value
var_with_max_p.value <- rownames(coef)[apply(coef,2,which.max)][4]
#remove the variable with the larger value
vars <- vars[which(vars != var_with_max_p.value)]
#computer the model with the updated variables
lm2 <- lm(cars$mpg ~ ., data = cars[vars])
summary.lm <- summary(lm2)
}
summary.lm
#summary(bckwd_search)
null_cars.lm <- lm(mpg ~ 1, data=cars)
full_cars.lm <- lm(mpg ~ ., data=cars)
fwd_search <- step(null_cars.lm, scope=list(lower=null_cars.lm, upper=full_cars.lm),
direction="forward", trace = F)
bckwd_search <- step(full_cars.lm, data=cars, direction="backward", trace = F)
mixed_search <- step(null_cars.lm, scope = list(upper=full_cars.lm),
data=cars, direction="both", trace = F)
summary(mixed_search)
#start with all the descriptors of computer performance in the lm
summary.lm <- summary(lm(mpg ~ ., data=cars))
vars <- names(cars)
vars <- vars[which(vars != "mpg")]
tol <- 0.01
#while there are still variables with p-values larger than tol
while(length(which(summary.lm$coefficients[,4] > tol)) != 0){
#coefficients table
coef <- summary.lm$coefficients
#find the variable with the largest p-value
var_with_max_p.value <- rownames(coef)[apply(coef,2,which.max)][4]
#remove the variable with the larger value
vars <- vars[which(vars != var_with_max_p.value)]
#computer the model with the updated variables
lm2 <- lm(cars$mpg ~ ., data = cars[vars])
summary.lm <- summary(lm2)
}
summary.lm
#summary(bckwd_search)
full_cars.lm <- lm(mpg ~ ., data=cars)
bckwd_search <- step(full_cars.lm, data=cars, direction="backward", trace = F)
summary(bckwd_search)
#start with all the descriptors of computer performance in the lm
summary.lm <- summary(lm(mpg ~ ., data=cars))
vars <- names(cars)
vars <- vars[which(vars != "mpg")]
tol <- 0.01
#while there are still variables with p-values larger than tol
while(length(which(summary.lm$coefficients[,4] > tol)) != 0){
#coefficients table
coef <- summary.lm$coefficients
#find the variable with the largest p-value
var_with_max_p.value <- rownames(coef)[apply(coef,2,which.max)][4]
#remove the variable with the larger value
vars <- vars[which(vars != var_with_max_p.value)]
#computer the model with the updated variables
lm2 <- lm(cars$mpg ~ ., data = cars[vars])
summary.lm <- summary(lm2)
}
summary.lm
#summary(bckwd_search)
null_cars.lm <- lm(mpg ~ 1, data=cars)
full_cars.lm <- lm(mpg ~ ., data=cars)
fwd_search <- step(null_cars.lm, scope=list(lower=null_cars.lm,
upper=full_cars.lm),direction="forward", trace=F)
bckwd_search <- step(full_cars.lm, data=cars, direction="backward", trace = F)
summary(bckwd_search)
#start with all the descriptors of computer performance in the lm
summary.lm <- summary(lm(mpg ~ ., data=cars))
vars <- names(cars)
vars <- vars[which(vars != "mpg")]
tol <- 0.01
#while there are still variables with p-values larger than tol
while(length(which(summary.lm$coefficients[,4] > tol)) != 0){
#coefficients table
coef <- summary.lm$coefficients
#find the variable with the largest p-value
var_with_max_p.value <- rownames(coef)[apply(coef,2,which.max)][4]
#remove the variable with the larger value
vars <- vars[which(vars != var_with_max_p.value)]
#computer the model with the updated variables
lm2 <- lm(cars$mpg ~ ., data = cars[vars])
summary.lm <- summary(lm2)
}
summary.lm
#summary(bckwd_search)
cars_lm2 <- lm(mpg ~ weight + year + origin, data = cars)
summary(cars_lm2)
cars_lm2 <- lm(mpg ~ weight + year + origin, data = cars)
summary(cars_lm2)
plot(cars_lm2)
cars.lm <- lm(mpg ~ cylinders + displacement + horsepower + weight +  year + origin, data = cars)
plot(cars.lm)
cars.lm <- lm(mpg ~ cylinders + displacement + horsepower + weight +  year + origin,
data = cars)
par(mfrow=c(2,2))
plot(cars.lm)
cars_lm2 <- lm(mpg ~ weight + year + origin, data = cars)
par(mfrow=c(2,2))
plot(cars_lm2)
cars.lm <- lm(mpg ~ cylinders + displacement + horsepower + weight +  year + origin,
data = cars)
par(mfrow=c(2,2))
plot(cars.lm, main="LM model gained with step")
cars_lm2 <- lm(mpg ~ weight + year + origin, data = cars)
par(mfrow=c(2,2))
plot(cars_lm2)
cars.lm <- lm(mpg ~ cylinders + displacement + horsepower + weight +  year + origin,
data = cars)
par(mfrow=c(2,2), title(main = "LM model gained with step))
plot(cars.lm)
cars_lm2 <- lm(mpg ~ weight + year + origin, data = cars)
par(mfrow=c(2,2))
plot(cars_lm2)
cars.lm <- lm(mpg ~ cylinders + displacement + horsepower + weight +  year + origin,
data = cars)
par(mfrow=c(2,2), title(main = "LM model gained with step"))
cars.lm <- lm(mpg ~ cylinders + displacement + horsepower + weight +  year + origin,
data = cars)
par(mfrow=c(2,2))
plot(cars.lm)
title("LM model gained with step", outer=TRUE)
cars_lm2 <- lm(mpg ~ weight + year + origin, data = cars)
par(mfrow=c(2,2))
plot(cars_lm2)
title("LM model gained with our method", outer=TRUE)
cars.lm <- lm(mpg ~ cylinders + displacement + horsepower + weight +  year + origin,
data = cars)
par(mfrow=c(2,2))
plot(cars.lm)
title("LM model gained with step", outer=TRUE)
cars_lm2 <- lm(mpg ~ weight + year + origin, data = cars)
par(mfrow=c(2,2))
plot(cars_lm2)
title("LM model gained with our method", outer=TRUE)
null_cars.lm <- lm(mpg ~ 1, data=cars)
full_cars.lm <- lm(mpg ~ ., data=cars)
fwd_search <- step(null_cars.lm, scope=list(lower=null_cars.lm,
upper=full_cars.lm),direction="forward", trace=F)
bckwd_search <- step(full_cars.lm, data=cars, direction="backward", trace = F)
summary(bckwd_search)
#start with all the descriptors of computer performance in the lm
summary.lm <- summary(lm(mpg ~ ., data=cars))
vars <- names(cars)
vars <- vars[which(vars != "mpg")]
tol <- 0.01
#while there are still variables with p-values larger than tol
while(length(which(summary.lm$coefficients[,4] > tol)) != 0){
#coefficients table
coef <- summary.lm$coefficients
#find the variable with the largest p-value
var_with_max_p.value <- rownames(coef)[apply(coef,2,which.max)][4]
#remove the variable with the larger value
vars <- vars[which(vars != var_with_max_p.value)]
#computer the model with the updated variables
lm2 <- lm(cars$mpg ~ ., data = cars[vars])
summary.lm <- summary(lm2)
}
summary.lm
l <- anova(mod)
TSS <- sum(l$`Sum Sq`[1:2])
RSS <- l$`Sum Sq`[3]
p <- 2
n <- nrow(clean_edu_data)
F_c <- ((TSS-RSS)/p)/(RSS/(n-p-1))
F_c
